// ****************************************************************************
//
//	Scripting functions for MyApp domain
//
// ****************************************************************************
//
//	PROJECT	: Fluency/Indices
// 	DOMAIN  : MyApp
//	MODULE  : Scripts
//	PACKAGE	: -
// 	FOLDER  : -
// 	FILE	: MyAppScript
//
// ****************************************************************************

DialogueScript createDialogueScriptDoctor ()
{
	DialogueScript script;
	script.ScriptDescriptor <- 'Doctor';

	// Trigger
	BatchInsertEnd( script.ScriptTrigger.ParameterTypes , 'patientprofile' );
	BatchInsertEnd( script.ScriptTrigger.ParameterTypes , 'dentalpathology' );
	BatchInsertEnd( script.ScriptTrigger.ParameterTypes , 'dentaltreatment' );
	BatchInsertEnd( script.ScriptTrigger.ParameterTypes , 'dentalpiece' );
	BatchInsertEnd( script.ScriptTrigger.ParameterTypes , 'medicine' );
	BatchInsertEnd( script.ScriptTrigger.ParameterTypes , 'datetime' );
	BatchInsertEnd( script.ScriptTrigger.ParameterTypes , 'proposeddatetime' );
	BatchInsertEnd( script.ScriptTrigger.ParameterTypes , 'negotiatemodifier' );

	// Info
	ScriptInfoItem scriptInfoItem, emptyScriptInfoItem;

	scriptInfoItem <- emptyScriptInfoItem;
	scriptInfoItem.InfoItemType  <- 'core';
	scriptInfoItem.InfoItemState <- 'empty';
	BatchInsertEnd( script.ScriptInfoItems, scriptInfoItem );

	scriptInfoItem <- emptyScriptInfoItem;
	scriptInfoItem.InfoItemType <- 'action';
	scriptInfoItem.InfoItemState <- 'empty';
	BatchInsertEnd( script.ScriptInfoItems, scriptInfoItem );

	scriptInfoItem <- emptyScriptInfoItem;
	scriptInfoItem.InfoItemType <- 'scope';
	scriptInfoItem.InfoItemState <- 'empty';
	BatchInsertEnd( script.ScriptInfoItems, scriptInfoItem );

	scriptInfoItem <- emptyScriptInfoItem;
	scriptInfoItem.InfoItemType <- 'parameter';
	scriptInfoItem.InfoItemParameterType <- 'patientprofile';
	scriptInfoItem.InfoItemState <- 'empty';
	BatchInsertEnd( script.ScriptInfoItems, scriptInfoItem );

	scriptInfoItem <- emptyScriptInfoItem;
	scriptInfoItem.InfoItemType <- 'parameter';
	scriptInfoItem.InfoItemParameterType <- 'dentalpathology';
	scriptInfoItem.InfoItemState <- 'empty';
	BatchInsertEnd( script.ScriptInfoItems, scriptInfoItem );

	scriptInfoItem <- emptyScriptInfoItem;
	scriptInfoItem.InfoItemType <- 'parameter';
	scriptInfoItem.InfoItemParameterType <- 'dentaltreatment';
	scriptInfoItem.InfoItemState <- 'empty';
	BatchInsertEnd( script.ScriptInfoItems, scriptInfoItem );

	scriptInfoItem <- emptyScriptInfoItem;
	scriptInfoItem.InfoItemType <- 'parameter';
	scriptInfoItem.InfoItemParameterType <- 'dentalpiece';
	scriptInfoItem.InfoItemState <- 'empty';
	BatchInsertEnd( script.ScriptInfoItems, scriptInfoItem );

	scriptInfoItem <- emptyScriptInfoItem;
	scriptInfoItem.InfoItemType <- 'parameter';
	scriptInfoItem.InfoItemParameterType <- 'medicine';
	scriptInfoItem.InfoItemState <- 'empty';
	BatchInsertEnd( script.ScriptInfoItems, scriptInfoItem );

	scriptInfoItem <- emptyScriptInfoItem;
	scriptInfoItem.InfoItemType <- 'parameter';
	scriptInfoItem.InfoItemParameterType <- 'datetime';
	scriptInfoItem.InfoItemState <- 'empty';
	BatchInsertEnd( script.ScriptInfoItems, scriptInfoItem );

	scriptInfoItem <- emptyScriptInfoItem;
	scriptInfoItem.InfoItemType <- 'parameter';
	scriptInfoItem.InfoItemParameterType <- 'proposeddatetime';
	scriptInfoItem.InfoItemState <- 'empty';
	BatchInsertEnd( script.ScriptInfoItems, scriptInfoItem );

	scriptInfoItem <- emptyScriptInfoItem;
	scriptInfoItem.InfoItemType <- 'parameter';
	scriptInfoItem.InfoItemParameterType <- 'negotiatemodifier';
	scriptInfoItem.InfoItemState <- 'empty';
	BatchInsertEnd( script.ScriptInfoItems, scriptInfoItem );

	script <- defaultNode(script, 0);

 	// NODE - loadProfile
	script <- createBranchNodeNoWait(script, 1, 'loadProfile');
	script <- modifyBranchNodeState(script, 'loadProfile', 'active');
	script <- addBranchActionGeneral0Parameter(script, 'loadProfile', 'load_profile');
	script <- modifyBranchNodeMessage(script, 'loadProfile', 'social', 'greeting', 'offer', 'welcomedoctor');

		// EDGE - always
    	script <- createOutputBranch(script, 1, 'loadProfile', 'confirmPatient', 'always');

 	// NODE - confirmPatient
	script <- createBranchNode(script, 1, 'confirmPatient');
	script <- modifyBranchNodeMessageParameter(script, 'confirmPatient', 'question', 'propositional', 'confirm', 'patientname', 'patientprofile');

		// EDGE - Yes
		script <- createOutputBranch(script, 1, 'confirmPatient', 'startOdontogram', 'yes');
		script <- addOutputBranchConditionCore(script, 'confirmPatient', 'startOdontogram', 'yes', 'basicanswer', 'agreement');

        // EDGE - No
		script <- createOutputBranch(script, 1, 'confirmPatient', 'exitFailure', 'no');
		script <- addOutputBranchConditionCore(script, 'confirmPatient', 'exitFailure', 'no', 'basicanswer', 'disagreement');

		// EDGE - Dontknow
		script <- createOutputBranch(script, 1, 'confirmPatient', 'exitFailure', 'dontknow');
		script <- addOutputBranchConditionCore(script, 'confirmPatient', 'exitFailure', 'dontknow', 'basicanswer', 'dontknow');

		// EDGE - Uncertain
		script <- createOutputBranch(script, 1, 'confirmPatient', 'exitFailure', 'uncertain');
		script <- addOutputBranchConditionCore(script, 'confirmPatient', 'exitFailure', 'uncertain', 'basicanswer', 'uncertain');

	// NODE - exitFailure
	script <- createBranchNodeNoWait(script, 1, 'exitFailure');
	script <- modifyBranchNodeMessage(script, 'exitFailure', 'statement', 'inform', 'patient', 'failure');

	// NODE - startOdontogram
	script <- createBranchNodeNoWait(script, 1, 'startOdontogram');
	script <- modifyBranchNodeMessage(script, 'startOdontogram', 'statement', 'inform', 'start', 'odontogram');

		// EDGE - always
    	script <- createOutputBranch(script, 1, 'startOdontogram', 'continueOdontogram', 'always');

	// NODE - continueOdontogram
	script <- createBranchNode(script, 1, 'continueOdontogram');

		// EDGE - Digested(DentalPathology) - NotDigested(DentalTreatment)
		script <- createOutputBranch(script, 1, 'continueOdontogram', 'checkOdontogram', 'digestedPathology');
		script <- addOutputBranchConditionNotCore(script, 'continueOdontogram', 'checkOdontogram', 'digestedPathology', 'basicanswer', 'disagreement');
		script <- addOutputBranchConditionParameterDigested(script, 'continueOdontogram', 'checkOdontogram', 'digestedPathology', 'dentalpathology');
		script <- addOutputBranchConditionParameterNotDigested(script, 'continueOdontogram', 'checkOdontogram', 'digestedPathology', 'dentaltreatment');
		script <- addOutputBranchActionGeneral1Parameter(script, 'continueOdontogram', 'checkOdontogram', 'digestedPathology', 'annotate_odontogram', 'dentalpathology');

		// EDGE - NotDigested(DentalPathology) - Digested(DentalTreatment)
		script <- createOutputBranch(script, 1, 'continueOdontogram', 'checkOdontogram', 'digestedTreatment');
		script <- addOutputBranchConditionNotCore(script, 'continueOdontogram', 'checkOdontogram', 'digestedTreatment', 'basicanswer', 'disagreement');
		script <- addOutputBranchConditionParameterNotDigested(script, 'continueOdontogram', 'checkOdontogram', 'digestedTreatment', 'dentalpathology');
		script <- addOutputBranchConditionParameterDigested(script, 'continueOdontogram', 'checkOdontogram', 'digestedTreatment', 'dentaltreatment');
		script <- addOutputBranchActionGeneral1Parameter(script, 'continueOdontogram', 'checkOdontogram', 'digestedTreatment', 'annotate_odontogram', 'dentaltreatment');

		// EDGE - Digested(DentalPathology) - Digested(DentalTreatment)
		script <- createOutputBranch(script, 1, 'continueOdontogram', 'checkOdontogram', 'digestedPathologyTreatment');
		script <- addOutputBranchConditionNotCore(script, 'continueOdontogram', 'checkOdontogram', 'digestedPathologyTreatment', 'basicanswer', 'disagreement');
		script <- addOutputBranchConditionParameterDigested(script, 'continueOdontogram', 'checkOdontogram', 'digestedPathologyTreatment', 'dentalpathology');
		script <- addOutputBranchConditionParameterDigested(script, 'continueOdontogram', 'checkOdontogram', 'digestedPathologyTreatment', 'dentaltreatment');
		script <- addOutputBranchActionGeneral2Parameter(script, 'continueOdontogram', 'checkOdontogram', 'digestedPathologyTreatment', 'annotate_odontogram', 'dentalpathology', 'dentaltreatment');

		// EDGE - Scope(Finished)
		script <- createOutputBranch(script, 1, 'continueOdontogram', 'proposeNextTreatment', 'finishodontogram');
		script <- addOutputBranchConditionScope(script, 'continueOdontogram', 'proposeNextTreatment', 'finishodontogram', 'finishodontogram');
		script <- addOutputBranchActionGeneral(script, 'continueOdontogram', 'proposeNextTreatment', 'finishodontogram', 'clear_fails');

		// TODO LOS NOes

	// NODE - checkOdontogram
	script <- createBranchNodeNoWait(script, 1, 'checkOdontogram');

		// EDGE - SomeOdontogramFail
    	script <- createOutputBranch(script, 1, 'checkOdontogram', 'informOdontogramFail', 'error');
       	script <- addOutputBranchConditionGeneral(script, 'checkOdontogram', 'informOdontogramFail', 'error', 'some_odontogram_fail');

		// EDGE - NoneOdontogramFail
    	script <- createOutputBranch(script, 1, 'checkOdontogram', 'echoOdontogram', 'correct');
       	script <- addOutputBranchConditionGeneral(script, 'checkOdontogram', 'echoOdontogram', 'correct', 'none_odontogram_fail');

		// EDGE - BridgeOdontogramFail
       	script <- createOutputBranch(script, 1, 'checkOdontogram', 'informBridgeFail', 'bridge');
       	script <- addOutputBranchConditionGeneral(script, 'checkOdontogram', 'informBridgeFail', 'bridge', 'bridge_odontogram_fail');

	// NODE - informBridgeFail
	script <- createBranchNodeNoWait(script, 1, 'informBridgeFail');
	script <- modifyBranchNodeMessage(script, 'informBridgeFail', 'statement', 'inform', 'error', 'odontogram');

		// EDGE - always
       	script <- createOutputBranch(script, 1, 'informBridgeFail', 'continueOdontogram', 'always');

	// NODE - informOdontogramFail
	script <- createBranchNode(script, 1, 'informOdontogramFail');
	script <- modifyBranchNodeMessage(script, 'informOdontogramFail', 'statement', 'inform', 'error', 'odontogram');

		// EDGE - Digested(DentalPiece)
    	script <- createOutputBranch(script, 1, 'informOdontogramFail', 'checkOdontogram', 'digested');
		script <- addOutputBranchConditionParameterDigested(script, 'informOdontogramFail', 'checkOdontogram', 'digested', 'dentalpiece');
		script <- addOutputBranchActionGeneral1Parameter(script, 'informOdontogramFail', 'checkOdontogram', 'digested', 'change_dentalpiece', 'dentalpiece');

		// EDGE - NotDigested(DentalPiece)
       	script <- createOutputBranch(script, 1, 'informOdontogramFail', 'checkOdontogram', 'notdigested');
   		script <- addOutputBranchConditionParameterNotDigested(script, 'informOdontogramFail', 'checkOdontogram', 'notdigested', 'dentalpiece');
   		script <- addOutputBranchActionGeneral(script, 'informOdontogramFail', 'checkOdontogram', 'notdigested', 'remove_fails');

	// NODE - echoOdontogram
	script <- createBranchNodeNoWait(script, 1, 'echoOdontogram');
	script <- modifyBranchNodeMessage(script, 'echoOdontogram', 'statement', 'inform', 'echo', 'odontogram');

		// EDGE - always
    	script <- createOutputBranch(script, 1, 'echoOdontogram', 'continueOdontogram', 'always');

	// NODE - proposeNextTreatment
	script <- createBranchNode(script, 1, 'proposeNextTreatment');
	script <- modifyBranchNodeMessage(script, 'proposeNextTreatment', 'statement', 'inform', 'propose', 'treatment');

		// EDGE - Digested(Medicine)
    	script <- createOutputBranch(script, 1, 'proposeNextTreatment', 'checkMedicine', 'digested');
    	script <- addOutputBranchConditionParameterDigested(script, 'proposeNextTreatment', 'checkMedicine', 'digested', 'medicine');

 		// EDGE - NotDigested(Medicine) - Yes
        script <- createOutputBranch(script, 1, 'proposeNextTreatment', 'proposeNextTreatmentAgain', 'yes');
        script <- addOutputBranchConditionParameterNotDigested(script, 'proposeNextTreatment', 'proposeNextTreatmentAgain', 'yes', 'medicine');
        script <- addOutputBranchConditionCore(script, 'proposeNextTreatment', 'proposeNextTreatmentAgain', 'yes', 'basicanswer', 'agreement');
		script <- modifyOutputBranchMessage(script, 'proposeNextTreatment', 'proposeNextTreatmentAgain', 'yes', 'question', 'whquestion', 'ask', 'treatmentagain');

        // EDGE - NotDigested(Medicine) - No
        script <- createOutputBranch(script, 1, 'proposeNextTreatment', 'proposeAppointment', 'no');
        script <- addOutputBranchConditionParameterNotDigested(script, 'proposeNextTreatment', 'proposeAppointment', 'no', 'medicine');
        script <- addOutputBranchConditionCore(script, 'proposeNextTreatment', 'proposeAppointment', 'no', 'basicanswer', 'disagreement');

	// NODE - proposeNextTreatmentAgain
    script <- createBranchNode(script, 1, 'proposeNextTreatmentAgain');

    	// EDGE - Digested(Medicine)
       	script <- createOutputBranch(script, 1, 'proposeNextTreatmentAgain', 'checkMedicine', 'digested');
      	script <- addOutputBranchConditionParameterDigested(script, 'proposeNextTreatmentAgain', 'checkMedicine', 'digested', 'medicine');

	// NODE - checkMedicine
	script <- createBranchNodeNoWait(script, 1, 'checkMedicine');

    	// EDGE - Correct(Medicine)
      	script <- createOutputBranch(script, 1, 'checkMedicine', 'proposeAppointment', 'correct');
      	script <- addOutputBranchConditionGeneral2Parameter(script, 'checkMedicine', 'proposeAppointment', 'correct', 'correct_medicine', 'medicine', 'patientprofile');
		script <- modifyOutputBranchMessageParameter(script, 'checkMedicine', 'proposeAppointment', 'correct', 'statement', 'inform', 'implicit', 'parameter', 'medicine');
		
    	// EDGE - Incorrect(Medicine)
      	script <- createOutputBranch(script, 1, 'checkMedicine', 'proposeNextTreatmentAgain', 'incorrect');
      	script <- addOutputBranchConditionGeneral2Parameter(script, 'checkMedicine', 'proposeNextTreatmentAgain', 'incorrect', 'incorrect_medicine', 'medicine', 'patientprofile');
		script <- modifyOutputBranchMessageParameter2(script, 'checkMedicine', 'proposeNextTreatmentAgain', 'incorrect', 'statement', 'inform', 'allergy', 'parameter', 'medicine', 'patientprofile');

	// Script - DATETIME NEGOTIATION

	// NODE - proposeAppointment
	script <- createBranchNode(script, 1, 'proposeAppointment');
	script <- modifyBranchNodeMessage(script, 'proposeAppointment', 'statement', 'inform', 'propose', 'appointment');

		// EDGE - Yes
        script <- createOutputBranch(script, 1, 'proposeAppointment', 'negotiateAppointment', 'yes');
        script <- addOutputBranchConditionCore(script, 'proposeAppointment', 'negotiateAppointment', 'yes', 'basicanswer', 'agreement');
        script <- addOutputBranchConditionParameterNotDigested(script, 'proposeAppointment', 'negotiateAppointment', 'yes', 'datetime');
   		script <- addOutputBranchActionGeneral(script, 'proposeAppointment', 'negotiateAppointment', 'yes', 'clear_datetime');

		// EDGE - Digested(datetime)
        script <- createOutputBranch(script, 1, 'proposeAppointment', 'negotiateAppointment', 'digested');
        script <- addOutputBranchConditionParameterDigested(script, 'proposeAppointment', 'negotiateAppointment', 'digested', 'datetime');

        // EDGE - No
        script <- createOutputBranch(script, 1, 'proposeAppointment', 'end', 'no');
        script <- addOutputBranchConditionCore(script, 'proposeAppointment', 'end', 'no', 'basicanswer', 'disagreement');

	// NODE - negotiateAppointment
	script <- createBranchNodeNoWait(script, 1, 'negotiateAppointment');
	script <- addBranchActionGeneral1Parameter(script, 'negotiateAppointment', 'negotiate_datetime', 'datetime');
	
		// EDGE - NotEmpty(proposeddatetime)
        script <- createOutputBranch(script, 1, 'negotiateAppointment', 'confirmAppointment', 'notemptyproposeddatetime');
        script <- addOutputBranchConditionParameterNotEmpty(script, 'negotiateAppointment', 'confirmAppointment', 'notemptyproposeddatetime', 'proposeddatetime');

		// EDGE - Empty(proposeddatetime) - Not(InThePast)
        script <- createOutputBranch(script, 1, 'negotiateAppointment', 'proposeAppointment', 'emptyproposeddatetime');
        script <- addOutputBranchConditionParameterEmpty(script, 'negotiateAppointment', 'proposeAppointment', 'emptyproposeddatetime', 'proposeddatetime');
        script <- addOutputBranchConditionGeneral(script, 'negotiateAppointment', 'proposeAppointment', 'emptyproposeddatetime', 'not_negotiating_in_the_past');
		script <- modifyOutputBranchMessage(script, 'negotiateAppointment', 'proposeAppointment', 'emptyproposeddatetime', 'statement', 'inform', 'nomore', 'appointments');

		// EDGE - Empty(proposeddatetime) - InThePast
        script <- createOutputBranch(script, 1, 'negotiateAppointment', 'proposeAppointment', 'emptyproposeddatetimepast');
        script <- addOutputBranchConditionParameterEmpty(script, 'negotiateAppointment', 'proposeAppointment', 'emptyproposeddatetimepast', 'proposeddatetime');
        script <- addOutputBranchConditionGeneral(script, 'negotiateAppointment', 'proposeAppointment', 'emptyproposeddatetimepast', 'negotiating_in_the_past');
		script <- modifyOutputBranchMessage(script, 'negotiateAppointment', 'proposeAppointment', 'emptyproposeddatetimepast', 'statement', 'inform', 'past', 'appointments');

	// NODE - confirmAppointment
	script <- createBranchNode(script, 1, 'confirmAppointment');
	script <- modifyBranchNodeMessageParameter(script, 'confirmAppointment', 'question', 'propositional', 'confirm', 'appointment', 'proposeddatetime');

		// EDGE - Yes
        script <- createOutputBranch(script, 1, 'confirmAppointment', 'end', 'yes');
        script <- addOutputBranchConditionCore(script, 'confirmAppointment', 'end', 'yes', 'basicanswer', 'agreement');
		script <- modifyOutputBranchMessageParameter(script, 'confirmAppointment', 'end', 'yes', 'statement', 'inform', 'explicit', 'appointment', 'proposeddatetime');

		// EDGE - No
        script <- createOutputBranch(script, 1, 'confirmAppointment', 'negotiateAppointment', 'no');
        script <- addOutputBranchConditionCore(script, 'confirmAppointment', 'negotiateAppointment', 'no', 'basicanswer', 'disagreement');
		script <- addOutputBranchActionGeneral1Parameter(script, 'confirmAppointment', 'negotiateAppointment', 'no', 'add_rejected_datetime', 'proposeddatetime');

		// EDGE - Digested(datetime)
        script <- createOutputBranch(script, 1, 'confirmAppointment', 'negotiateAppointment', 'digested');
        script <- addOutputBranchConditionParameterDigested(script, 'confirmAppointment', 'negotiateAppointment', 'digested', 'datetime');

		// EDGE - Digested(negotiatemodifier)
        script <- createOutputBranch(script, 1, 'confirmAppointment', 'negotiateAppointment', 'negotiate');
        script <- addOutputBranchConditionParameterDigested(script, 'confirmAppointment', 'negotiateAppointment', 'negotiate', 'negotiatemodifier');
		script <- addOutputBranchActionGeneral2Parameter(script, 'confirmAppointment', 'negotiateAppointment', 'negotiate', 'add_negotiate_datetime', 'proposeddatetime', 'negotiatemodifier');

	// NODE - end
	script <- createBranchNode(script, 1, 'end');
	script <- modifyBranchNodeMessage(script, 'end', 'social', 'goodbye', '', '');

		// EDGE - always
    	script <- createOutputBranch(script, 1, 'end', 'null', 'always');

	script <- endScript(script,10);

  	return script;
}


